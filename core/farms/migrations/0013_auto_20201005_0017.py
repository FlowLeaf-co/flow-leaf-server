# Generated by Django 3.1.2 on 2020-10-04 22:17

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('farms', '0012_auto_20200920_0051'),
    ]

    operations = [
        migrations.CreateModel(
            name='ControllerComponent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('channel_name', models.CharField(blank=True, default='', help_text='The channel name of the connected WebSocket.', max_length=128)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The datetime of creation.')),
                ('modified_at', models.DateTimeField(auto_now=True, help_text='The datetime of the last update.')),
            ],
        ),
        migrations.CreateModel(
            name='ControllerComponentType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of this type, e.g., ESP32 or RasberryPi4', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The datetime of creation.')),
                ('modified_at', models.DateTimeField(auto_now=True, help_text='The datetime of the last update.')),
            ],
        ),
        migrations.CreateModel(
            name='DataPointType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name, e.g., air temperature or acidity.', max_length=50)),
                ('unit', models.CharField(help_text='The unit of the value, e.g., Â°C or pH.', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PeripheralComponentType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of this type, e.g., BME280 or LED.', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The datetime of creation.')),
                ('modified_at', models.DateTimeField(auto_now=True, help_text='The datetime of the last update.')),
            ],
        ),
        migrations.AlterField(
            model_name='site',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='The datetime of creation.'),
        ),
        migrations.AlterField(
            model_name='site',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='site',
            name='modified_at',
            field=models.DateTimeField(auto_now=True, help_text='The datetime of the last update.'),
        ),
        migrations.CreateModel(
            name='SiteEntity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of the site entity which unifies all its components.', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The datetime of creation.')),
                ('modified_at', models.DateTimeField(auto_now=True, help_text='The datetime of the last update.')),
                ('site', models.ForeignKey(help_text='The site to which the site entity belongs.', on_delete=django.db.models.deletion.CASCADE, to='farms.site')),
            ],
        ),
        migrations.CreateModel(
            name='PeripheralComponent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('config', models.JSONField(help_text='The config sent to the controller to perform setup excl. the name.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The datetime of creation.')),
                ('modified_at', models.DateTimeField(auto_now=True, help_text='The datetime of the last update.')),
                ('component_type', models.ForeignKey(help_text='The type of this peripheral component.', on_delete=django.db.models.deletion.CASCADE, to='farms.peripheralcomponenttype')),
                ('controller_component', models.ForeignKey(help_text='Which controller controls and is connected to this peripheral.', on_delete=django.db.models.deletion.CASCADE, to='farms.controllercomponent')),
                ('site_entity', models.OneToOneField(help_text='Which site entity the component is a part of.', on_delete=django.db.models.deletion.CASCADE, to='farms.siteentity')),
            ],
        ),
        migrations.CreateModel(
            name='DataPoint',
            fields=[
                ('time', models.DateTimeField(default=datetime.datetime.now, primary_key=True, serialize=False)),
                ('value', models.FloatField(help_text='The value of the data given by the data point type and peripheral.')),
                ('data_point_type', models.ForeignKey(help_text='The type of data recorded and its unit.', on_delete=django.db.models.deletion.CASCADE, to='farms.datapointtype')),
                ('peripheral_component', models.ForeignKey(help_text='The peripheral that generated the data point.', on_delete=django.db.models.deletion.CASCADE, to='farms.peripheralcomponent')),
            ],
        ),
        migrations.AddField(
            model_name='controllercomponent',
            name='component_type',
            field=models.ForeignKey(help_text='The type of which this component is an instance of.', on_delete=django.db.models.deletion.CASCADE, to='farms.controllercomponenttype'),
        ),
        migrations.AddField(
            model_name='controllercomponent',
            name='site_entity',
            field=models.OneToOneField(help_text='Which site entity the component is a part of.', on_delete=django.db.models.deletion.CASCADE, to='farms.siteentity'),
        ),
    ]
